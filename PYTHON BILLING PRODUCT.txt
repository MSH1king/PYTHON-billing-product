#### coded by muhammad saad hussain
#### BCS201003
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QFrame, QGridLayout
from PyQt5.QtGui import QPainter, QColor, QPen
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap

import PyQt5.QtCore
print(PyQt5.QtCore.PYQT_VERSION_STR)

from PyQt5.QtWidgets import QWidget

class MyWidget(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)

        self.setMouseTracking(True)  # Enable mouse tracking

        self.image = QPixmap("image.jpg")

    def paintEvent(self, event):
        painter = QPainter(self)
        painter.drawPixmap(self.rect(), self.image)

    def mousePressEvent(self, event):
        # Handle mouse press event here
        pass

    def mouseMoveEvent(self, event):
        # Handle mouse move event here
        pass

    def mouseReleaseEvent(self, event):
        # Handle mouse release event here
        pass

def update_receipt(self):
    pixmap = self.canvas.pixmap()
    if pixmap is not None:
        pixmap.fill(Qt.white)
    else:
        pixmap = QPixmap(400, 600)
        pixmap.fill(Qt.white)
        self.canvas.setPixmap(pixmap)

    painter = QPainter(self.canvas.pixmap())
    painter.setPen(QPen(QColor(0, 0, 0), 2))

    for i, product in enumerate(self.cart):
        name_label = QLabel(product["name"], self)
        price_label = QLabel("${:.2f}".format(product["price"]), self)

        painter.drawText(20, i*30+20, product["name"])
        painter.drawText(150, i*30+20, "${:.2f}".format(product["price"]))

    total_price = sum([product["price"] for product in self.cart])
    total_label = QLabel("Total: ${:.2f}".format(total_price), self)
    painter.drawText(150, len(self.cart)*30+50, "Total: ${:.2f}".format(total_price))
    painter.end() # End the painting operation

    self.canvas.setPixmap(pixmap)

class BillingProduct(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Billing Product")
        self.setGeometry(100, 100, 800, 600)
        print ('MUHAMMAD SAAD HUSSAIN')
        self.canvas = QLabel(self)
        self.canvas.setGeometry(0, 0, 400, 600)
        self.canvas.setStyleSheet("background-color: lightblue;")

        self.product_frame = QFrame(self)
        self.product_frame.setGeometry(400, 0, 400, 600)
        self.product_frame.setStyleSheet("background-color: green;")

        self.product_layout = QGridLayout(self.product_frame)
        self.product_layout.setSpacing(10)

        self.products = [
            {"name": "PTI FLAG 1", "price": 10.3},
            {"name": "PPP FLAG 2", "price": 11.3},
            {"name": "MLN FLAG 3", "price": 10.5}
        ]

        for i, product in enumerate(self.products):
            name_label = QLabel(product["name"], self)
            price_label = QLabel("${:.2f}".format(product["price"]), self)

            self.product_layout.addWidget(name_label, i, 0)
            self.product_layout.addWidget(price_label, i, 1)

        self.cart = []

    def mousePressEvent(self, event):

        if event.button() == Qt.LeftButton:
            for i, product in enumerate(self.products):
                if i*50 < event.y() < (i+1)*50:
                    self.cart.append(product)
                    self.update_receipt()
                    break
        elif event.button() == Qt.RightButton:
            self.cart = []
            self.update_receipt()
    def update_receipt(self):
        pixmap = self.canvas.pixmap()
        if pixmap is not None:
            pixmap.fill(Qt.white)
        else:
            pixmap = QPixmap(400, 600)
            pixmap.fill(Qt.white)
            self.canvas.setPixmap(pixmap)

        painter = QPainter(self.canvas.pixmap())
        painter.setPen(QPen(QColor(0, 0, 0), 2))

        for i, product in enumerate(self.cart):
            name_label = QLabel(product["name"], self)
            price_label = QLabel("${:.2f}".format(product["price"]), self)

            painter.drawText(20, i*30+20, product["name"])
            painter.drawText(150, i*30+20, "${:.2f}".format(product["price"]))

        total_price = sum([product["price"] for product in self.cart])
        total_label = QLabel("Total: ${:.2f}".format(total_price), self)
        painter.drawText(150, len(self.cart)*30+50, "Total: ${:.2f}".format(total_price))

        self.canvas.setPixmap(pixmap)

if __name__ == "__main__":
    app = QApplication([])
    window = BillingProduct()
    window.show()
    app.exec_()
